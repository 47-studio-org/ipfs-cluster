openapi: 3.0.1
info:
  title: IPFS Cluster API
  description: HTTP API to interact with IPFS Cluster.
  version: "0.10.1"
servers:
  - url: 'http://127.0.0.1:9094'
paths:
  /id:
    get:
      summary: Get ID of Cluster
      tags:
        - cluster
      description: Get the ID of the Cluster and it's associated IPFS node.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peer'
              example: {"id":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","addresses":["/p2p-circuit/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/127.0.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.86.35/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.6.0.2/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.1.42/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers":["QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers_addresses":null,"version":"0.10.0","commit":"","rpc_protocol_version":"/ipfscluster/0.10/rpc","error":"","ipfs":{"id":"QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","addresses":["/ip4/127.0.0.1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/192.168.86.35/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/10.0.3.1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/10.6.0.2/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/192.168.1.42/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip6/::1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse"],"error":""},"peername":"omou"}
  /version:
    get:
      summary: Get Version of Cluster
      tags:
        - cluster
      description: Get the current version of the IPFS Cluster.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Version:
                    type: string
              example: {"Version":"0.10.0"}
              
  /add:
    post:
      summary: Add a File
      parameters:
        - $ref: '#/components/parameters/pinNameParam'
        - $ref: '#/components/parameters/pinReplicationMinParam'
        - $ref: '#/components/parameters/pinReplicationMaxParam'
        - $ref: '#/components/parameters/pinShardSize'
        - $ref: '#/components/parameters/hash'
        - $ref: '#/components/parameters/recursive'
        - $ref: '#/components/parameters/layout'
        - $ref: '#/components/parameters/rawLeaves'
        - $ref: '#/components/parameters/hidden'
        - $ref: '#/components/parameters/wrap'
        - $ref: '#/components/parameters/shard'
        - $ref: '#/components/parameters/progress'
        - $ref: '#/components/parameters/cidVersion'
        - $ref: '#/components/parameters/streamChannels'
        - $ref: '#/components/parameters/noCopy'
        - $ref: '#/components/parameters/chunker'
      tags:
        - add
      description: Add a file to IPFS via IPFS Cluster
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    type: integer
                  name:
                    type: string
                  cid:
                    type: object
                    properties:
                      /:
                        type: string
              example: {"name":"test.file","cid":{"/":"QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"},"size":20}
        '400':
          $ref: '#/components/responses/BadRequest'
  /peers:
    get:
      summary: Get list of Peers
      tags:
        - peers
      description: Get the current list of IPFS Cluster and IPFS peers that are in the cluster.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peer'
              example: [{"id":"QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","addresses":["/ip4/192.168.1.42/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/p2p-circuit/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/192.168.86.35/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.0.3.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/127.0.0.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.6.0.2/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB"],"cluster_peers":["QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers_addresses":["/ip4/172.24.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/172.19.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.1.42/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/p2p-circuit/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.0.3.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/127.0.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.86.35/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.6.0.2/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.71.2.85/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"version":"0.10.0","commit":"","rpc_protocol_version":"/ipfscluster/0.10/rpc","error":"","ipfs":{"id":"Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","addresses":["/ip4/127.0.0.1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/192.168.86.35/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/10.0.3.1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/10.6.0.2/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/192.168.1.42/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip6/::1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw"],"error":""},"peername":"omou"},{"id":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","addresses":["/ip4/192.168.1.42/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/127.0.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.0.3.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.6.0.2/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/p2p-circuit/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.86.35/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers":["QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers_addresses":["/ip4/10.6.0.2/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/p2p-circuit/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.71.2.85/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/192.168.86.35/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/192.168.1.42/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/127.0.0.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.0.3.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB"],"version":"0.10.0","commit":"","rpc_protocol_version":"/ipfscluster/0.10/rpc","error":"","ipfs":{"id":"QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","addresses":["/ip4/127.0.0.1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/192.168.86.35/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/10.0.3.1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/10.6.0.2/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip4/192.168.1.42/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse","/ip6/::1/tcp/4001/ipfs/QmV8LYMZ1KLRzJacFCXrUjYJdHN4XcdTvLmswdkzwVjfse"],"error":""},"peername":"omou"}]

    post:
      summary: Add a new Peer to the Cluster
      tags:
        - peers
      description: Add a new Peer to the Cluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peer_id:
                  type: string
            example: {"peer_id":"QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peer'
              example: {"addresses":["/ip4/192.168.86.35/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/p2p-circuit/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/127.0.0.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.6.0.2/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/192.168.1.42/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","/ip4/10.0.3.1/tcp/9196/ipfs/QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB"],"cluster_peers":["QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"cluster_peers_addresses":["/ip4/127.0.0.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.6.0.2/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.71.2.85/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/10.0.3.1/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.1.42/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/ip4/192.168.86.35/tcp/9096/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","/p2p-circuit/ipfs/QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH"],"commit":"","error":"","id":"QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","ipfs":{"addresses":["/ip4/127.0.0.1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/192.168.86.35/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/10.0.3.1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/10.6.0.2/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip4/192.168.1.42/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw","/ip6/::1/tcp/4002/ipfs/Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw"],"error":"","id":"Qmb1ThT2zJ1MVcqboqh6KwtZQ3TT8kEXeV6fUPJRVVZEqw"},"peername":"omou","rpc_protocol_version":"/ipfscluster/0.10/rpc","version":"0.10.0"}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example: {"code":400,"message":"error decoding peer_id"}
              
  /peers/{peer}:
    parameters:
      - name: peer
        in: path
        required: true
        schema:
          type: string
    delete:
      summary: Remove a Peer from the Cluster
      tags:
        - peers
      description: Remove a Peer from the Cluster
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example: {"code":400,"message":"error decoding Peer ID: multihash length inconsistent: \u0026{6  15 [246 172 49]}"}
              
  /allocations:
    get:
      summary: Get Allocation information of all Pins
      tags:
        - allocations
      description: Get Allocation information of all Pins
      parameters:
        - name: filter
          in: query
          schema:
            type: string
            enum: [all, pin, meta-pin, clusterdag-pin, shard-pin]
          example: all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/PinOptions'
                properties: {}
              example: [{"replication_factor_min":-1,"replication_factor_max":-1,"name":"","shard_size":0,"user_allocations":null,"metadata":null,"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"type":2,"allocations":[],"max_depth":-1,"reference":null}]
  /allocations/{cid}:
    parameters:
      - name: cid
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get Allocation information of a Pin
      tags:
        - allocations
      description: Get Allocation information of a Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinOptions'
              example: {"replication_factor_min":-1,"replication_factor_max":-1,"name":"","shard_size":0,"user_allocations":null,"metadata":null,"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"type":2,"allocations":[],"max_depth":-1,"reference":null}
        '400':
          $ref: '#/components/responses/BadRequest'
  /pins:
    get:
      summary: Get a list of Pins
      parameters:
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/filter'
      tags:
        - pins
      description: Get a list of Pins
      responses:
        '400':
          description: BadRequest
          content:
            application/json:
              example: {"code":400,"message":"invalid filter value"}
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PinInfo'
              example: [{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:02:30.186116871+10:00","error":""}}}]

  /pins/{cid}:
    parameters:
      - name: cid
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get status of a Pin
      parameters:
        - $ref: '#/components/parameters/local'
      tags:
        - pins
      description: Get status of a Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinInfo'
              example: {"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:02:30.186116871+10:00","error":""}}}
        '400':
          $ref: '#/components/responses/PinBadRequest'
          
    post:
      parameters:
        - $ref: '#/components/parameters/pinNameParam'
        - $ref: '#/components/parameters/pinReplicationParam'
        - $ref: '#/components/parameters/pinReplicationMinParam'
        - $ref: '#/components/parameters/pinReplicationMaxParam'
        - $ref: '#/components/parameters/pinUserAllocationsParam'
        - $ref: '#/components/parameters/pinShardSize'
        - $ref: '#/components/parameters/pinMetaParam'
      summary: Add a new Pin
      tags:
        - pins
      description: Add a new Pin
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/PinBadRequest'
    delete:
      summary: Remove a Pin
      tags:
        - pins
      description: Remove a Pin
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/PinBadRequest'
  /pins/{keyType}/{path}:
    parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      - name: keyType
        in: path
        required: true
        schema:
          type: string
          enum: [ipfs, ipns, ipld]
    post:
      parameters:
        - $ref: '#/components/parameters/pinNameParam'
        - $ref: '#/components/parameters/pinReplicationParam'
        - $ref: '#/components/parameters/pinReplicationMinParam'
        - $ref: '#/components/parameters/pinReplicationMaxParam'
        - $ref: '#/components/parameters/pinUserAllocationsParam'
        - $ref: '#/components/parameters/pinMetaParam'
      summary: Add a new Pin by Path
      tags:
        - pins
      description: Add a new Pin by Path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinOptions'
              example:  {"replication_factor_min":-1,"replication_factor_max":-1,"name":"","shard_size":0,"user_allocations":null,"metadata":{},"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"type":2,"allocations":[],"max_depth":-1,"reference":null}
        '400':
          $ref: '#/components/responses/PathBadRequest'
          
    delete:
      summary: Remove a Pin by Path
      tags:
        - pins
      description: Remove a Pin by Path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinOptions'
              example: {"replication_factor_min":-1,"replication_factor_max":-1,"name":"","shard_size":0,"user_allocations":null,"metadata":null,"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"type":2,"allocations":[],"max_depth":-1,"reference":null}
        '500':
          description: Removing a Pin that doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example: {"code":500,"message":"cannot unpin pin uncommitted to
                    state: cid is not part of the global state"}
        '400':
          $ref: '#/components/responses/PathBadRequest'
          
  /pins/sync:
    post:
      summary: Perform Sync operation on all Pins
      parameters:
        - $ref: '#/components/parameters/local'
      tags:
        - pins
      description: Perform Sync operation on all Pins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PinInfo'
              example: [{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:21:38.680858768+10:00","error":""}}}]
  
  /pins/{cid}/sync:
    parameters:
      - name: cid
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Perform Sync operation on a Pin
      parameters:
        - $ref: '#/components/parameters/local'
      tags:
        - pins
      description: Perform Sync operation on a Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinInfo'
              example: {"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:21:38.680858768+10:00","error":""}}}
        '400':
          $ref: '#/components/responses/PinBadRequest'
  
  /pins/recover:
    post:
      summary: Perform Recover operation on all Pins
      tags:
        - pins
      description: Perform Recover operation on all Pins
      parameters:
        - name: local
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PinInfo'
              example: [{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:21:38.680858768+10:00","error":""}}}]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example: {"code":400,"message":"only requests with parameter local=true are supported"}
  
  /pins/{cid}/recover:
    parameters:
      - name: cid
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Perform Recover operation on a Pin
      parameters:
        - $ref: '#/components/parameters/local'
      tags:
        - pins
      description: Perform Recover operation on a Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinInfo'
              example: {"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer_map":{"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH":{"cid":{"/":"zdj7WcGff6a9WbgRjz37svL6BoQRyzYAe2GZLBtkPULUk6rkS"},"peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","peername":"omou","status":"pinning","timestamp":"2019-04-08T16:21:38.680858768+10:00","error":""}}}
        '400':
          $ref: '#/components/responses/PinBadRequest'
          
  /health/graph:
    get:
      summary: Query all connected cluster peers and their ipfs peers to generate a graph of the connections
      tags: 
        - health 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectGraph'
              example: {"ClusterID": "QmcftN5PNZ3X5fvTopUFCMMRcQL89iXxYYD3uZVvgokYPo","ipfs_links": {"QmSVBhsiCMvmBF262hDSY5q4aMhaNYDFVQa5ZCV4TeK32V": ["QmQ5Y2SmVW4iVuVvFThLFX2DgwhGMEKGcc6jt5NDjGpJPh","QmVwqRyKamr6UcJx5YYg2fCmxcBi1k5sFZjtizpFPyZkR1"],"QmdCsiyNzSKQoraJjnJvdv2qsTsXzQsQrG6PZ8P6Pm55N2": ["QmSxrFXq85asEujMX7HpRRZP98cPsYDCnpTtqBuCh5DBKk","12D3KooWERmHT6g4YkrPBTmhfDLjfi8b662vFCfvBXqzcdkPGQn1"]},"cluster_links": {"QmVSjqw1MFQkq8PdmvGXF1LZvb8uGV9zAhMHqxdrww4Fvy": ["QmcftN5PNZ3X5fvTopUFCMMRcQL89iXxYYD3uZVvgokYPo"],"QmcftN5PNZ3X5fvTopUFCMMRcQL89iXxYYD3uZVvgokYPo": ["QmVSjqw1MFQkq8PdmvGXF1LZvb8uGV9zAhMHqxdrww4Fvy"]},"cluster_to_ipfs": {"QmVSjqw1MFQkq8PdmvGXF1LZvb8uGV9zAhMHqxdrww4Fvy": "QmdCsiyNzSKQoraJjnJvdv2qsTsXzQsQrG6PZ8P6Pm55N2","QmcftN5PNZ3X5fvTopUFCMMRcQL89iXxYYD3uZVvgokYPo": "QmSVBhsiCMvmBF262hDSY5q4aMhaNYDFVQa5ZCV4TeK32V"}}
   
  /monitor/metrics/{name}:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
          enum: [ping, freespace]
    get:
      summary: Get the latest valid metrics of the given type logged by this peer for all current cluster peers
      tags:
        - health
      description: Get latest Metrics by Name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metric'
              example: [{"name":"ping","peer":"QmQnMiKwmxpHd3RizCk2Gk58TFp6d5n9pd9FXRnPFZiAKB","value":"","expire":1554782676484542500,"valid":true},{"name":"ping","peer":"QmSJz3VA8cQVeegqZGsTkKQ4uiBXzWBE4r43KPb8woZbtH","value":"","expire":1554782676191246300,"valid":true}]

components:
  schemas: 
    Cid:
      type: object
      properties:
        /:
          type: string

    ConnectGraph:
      type: object
      properties:
        ClusterID:
          type: string
        ipfs_links:
          type: object
          additionalProperties:
              type: array
              items:
                type: string
        cluster_links:
          type: object
          additionalProperties:
              type: array
              items:
                type: string      
        cluster_to_ipfs:
          type: object
          additionalProperties:
              type: string
          
    Peer:
      type: object
      properties:
        peername:
          type: string
        addresses:
          type: array
          items:
            type: string
        ipfs:
          type: object
          properties:
            addresses: {}
            error:
              type: string
        cluster_peers_addresses:
          type: array
          items:
            type: string
        commit:
          type: string
        rpc_protocol_version:
          type: string
        cluster_peers:
          type: array
          items:
            type: string
        id:
          type: string
        error:
          type: string
        version:
          type: string
    
    PinOptions:
      type: object
      properties:
        reference: {}
        metadata: {}
        allocations:
          type: array
          items:
            type: string
        max_depth:
          type: integer
        user_allocations: {}
        replication_factor_min:
          type: integer
        name:
          type: string
        replication_factor_max:
          type: integer
        shard_size:
          type: integer
        type:
          type: integer
        cid:
          $ref: '#/components/schemas/Cid'
    
    PinInfo:
      type: object
      properties:
        peer_map:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PeerMap'
        cid:
          $ref: '#/components/schemas/Cid'
  
    PeerMap:
      type: object
      properties:
        peername:
          type: string
        peer:
          type: string
        error:
          type: string
        cid:
          $ref: '#/components/schemas/Cid'
        status:
          type: string
        timestamp:
          type: string
           
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

    Metric:
      type: object
      properties:
        name:
          type: string
        peer:
          type: string
        value:
          type: string
        expire:
          type: integer
        valid:
          type: boolean
          
  parameters:
    pinNameParam:
      name: name
      in: query
      schema:
        type: string
        
    pinReplicationParam:
      name: replication
      in: query
      schema:
        type: integer
        minimum: -1
    
    pinReplicationMinParam:
      name: replication-min
      in: query
      schema:
        type: integer
        minimum: -1
        
    pinReplicationMaxParam:
      name: replication-max
      in: query
      schema:
        type: integer
        minimum: -1
      
    pinUserAllocationsParam:
      name: user-allocations
      in: query
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
      
    pinMetaParam:
      name: meta-
      description: Associate metadata strings with a Pin. Parameter MUST start with `meta-` to be picked up by server.
      in: query
      schema:
        type: object
        additionalProperties:
          type: string
        example: {"meta-timestamp":"2019-04-08T16:02:30.186116871+10:00"}
    
    pinShardSize:
      name: shard_size
      in: query
      schema:
        type: integer
    
    hash:
      name: hash
      in: query
      schema:
        type: string

    recursive:
      name: recursive
      in: query
      schema:
        type: boolean
    
    layout:
      name: layout
      in: query
      schema:
        type: string
        
    chunker:
      name: chunker
      in: query
      schema:
        type: string
    
    rawLeaves:
      name: raw-leaves
      in: query
      schema:
        type: boolean
    
    hidden:
      name: hidden
      in: query
      schema:
        type: boolean
    
    wrap:
      name: wrap-with-directory
      in: query
      schema:
        type: boolean
        
    shard:
      name: shard
      in: query
      schema:
        type: boolean
    
    progress:
      name: progress
      in: query
      schema:
        type: boolean
    
    cidVersion:
      name: cid-version
      in: query
      schema:
        type: integer
    
    streamChannels:
      name: stream-channels
      in: query
      schema:
        type: boolean
    
    noCopy:
      name: nocopy
      in: query
      schema:
        type: boolean
    
    local:
      name: local
      in: query
      schema:
        type: boolean
    
    filter:
      name: filter
      in: query
      schema:
        type: string

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    PinBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: {"code":400,"message":"error decoding Cid: selected encoding not supported"}

    PathBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: {"code":400,"message":"error parsing path: selected encoding not supported"}
          
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'